/********************************************************************************************************  
*                             
*                                    Address
*  
*                    (c) Copyright 20xx, Company Name, City, State
*                               All Rights Reserved
*
*
* FileName       : adc.h
* Version        : V2.0
* Programmer(s)  : zhaojun_xf
* Parameters     : LPC1700 12.000MHz
* DebugTools     : Realview MDK V4.23  JLINK V8(SWD)
* Description    : 
*
*
********************************************************************************************************/

#ifndef __ADC_H 
#define __ADC_H

/******************************************************************************************************** 
* 【管脚定义】 pin definition                                                
********************************************************************************************************/
#define ADC_CH0_FUN    (PIO0_23_AD00)                                         // AD0引脚P0.23
#define ADC_CH0_PORT   (PORT0)                                                // 
#define ADC_CH0_PIN    (23)                                                   // 

#define ADC_CH1_FUN    (PIO0_24_AD01)                                         // AD1引脚P0.24
#define ADC_CH1_PORT   (PORT0)                                                // 
#define ADC_CH1_PIN    (24)                                                   // 

#define ADC_CH2_FUN    (PIO0_25_AD02)                                         // AD2引脚P0.25
#define ADC_CH2_PORT   (PORT0)                                                // 
#define ADC_CH2_PIN    (25)                                                   // 

#define ADC_CH3_FUN    (PIO0_26_AD03)                                         // AD3引脚P0.26
#define ADC_CH3_PORT   (PORT0)                                                // 
#define ADC_CH3_PIN    (26)                                                   // 

#define ADC_CH4_FUN    (PIO1_30_AD04)                                         // AD4引脚P1.30
#define ADC_CH4_PORT   (PORT1)                                                // 
#define ADC_CH4_PIN    (30)                                                   // 

#define ADC_CH5_FUN    (PIO1_31_AD05)                                         // AD5引脚P1.31
#define ADC_CH5_PORT   (PORT1)                                                // 
#define ADC_CH5_PIN    (31)                                                   //  

#define ADC_CH6_FUN    (PIO0_3_AD06)                                          // AD6引脚P0.3
#define ADC_CH6_PORT   (PORT0)                                                // 
#define ADC_CH6_PIN    (3)                                                    //  

#define ADC_CH7_FUN    (PIO0_2_AD07)                                          // AD7引脚P0.2
#define ADC_CH7_PORT   (PORT0)                                                // 
#define ADC_CH7_PIN    (2)                                                    // 

/******************************************************************************************************** 
* 【宏定义】 macro definition                                                 
********************************************************************************************************/
#define ADC_NUM			        (8)							                   // 最大通道数
#define ADC_VREF			    (3300)							               // 参考电压，单位mV

/******************************************************************************************************** 
* 【枚举变量】 Enumerations                                                
********************************************************************************************************/
typedef enum
{
    ADC_CH0 = 0,
	ADC_CH1 = 1,
	ADC_CH2 = 2,
	ADC_CH3 = 3,

    ADC_CH4 = 4,
	ADC_CH5 = 5,
	ADC_CH6 = 6,
	ADC_CH7 = 7,

} ADC_CH;																       // 通道定义

/******************************************************************************************************** 
* 【寄存器】 Register                                              
********************************************************************************************************/

// 控制寄存器（AD0CR-0x4003 4000）
#define ADC_SEL		            (0)					                           // 从AD0.7:0 中选择采样和转换的输入脚
#define ADC_CLKDIV		        (8)					                           // A/D 转换时钟 = FPCLK / (CLKDIV + 1)
#define ADC_BURST		        (16)					                       // 控制方式选择
#define ADC_PDN		            (21)					                       // 模式选择(1-正常模式，0-掉电模式)
#define ADC_START		        (24)					                       // 启动模式
#define ADC_EDGE		        (27)					                       // 上升沿或下降沿启动(与START有关)

// 全局数据寄存器（AD0GDR-0x4003 4004）
#define ADC_RESULT		        (0x01 << 4)					                   // 转换结果
#define ADC_CHN 		        (0x01 << 24)					               // A/D通道
#define ADC_OVERRUN		        (0x01 << 30)				     	           // 读取该寄存器可清零该位
#define ADC_DONE		        (0x80000000)					               // A/D转换结束时该位置位

// 状态寄存器（ADSTAT-0x4003 4030）
#define ADC_ADINT		        (0x01 << 16)					               // 该位是A/D中断标志

#define ADC_OFFSET				(0x00004)								       // 各寄存器偏移地址
#define ADC_REG(addr)           (*((volatile u32*)addr))                       // 寄存器地址

/******************************************************************************************************** 
* 【内部函数】 internal function                                              
********************************************************************************************************/
static void ADC_SetGpio(u8 chNum);			                                   // 端口设置

/******************************************************************************************************** 
* 【全局函数】 global function                                                 
********************************************************************************************************/
extern u8   ADCInit(u8 chNum, u32 clk);                                        // 初始化ADC
extern u32  ADCRend(u8 chNum);	                                               // 读取ADC

/*******************************************************************************************************/
#endif

/******************************************************************************************************** 
* End Of File         
********************************************************************************************************/
