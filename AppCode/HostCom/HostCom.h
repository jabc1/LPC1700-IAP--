/******************************************************************************************************** 
*                             
*                                    Address
*  
*                    (c) Copyright 20xx, Company Name, City, State
*                               All Rights Reserved
*
*
* FileName       : HostCom.h
* Version        : V2.0
* Programmer(s)  : zhaojun_xf
* Parameters     : LPC1700 12.000MHz
* DebugTools     : Realview MDK V4.23  JLINK V8(SWD)
* Description    : 
*
*
********************************************************************************************************/

#ifndef __HOSTCOM_H 
#define __HOSTCOM_H

/********************************************************************************************************
* Pin Definition                                                 
********************************************************************************************************/

/********************************************************************************************************
* Macro Definition                                                
********************************************************************************************************/
#define HC_FONT_ADDR              0x000C0000                             // 字库地址
#define HC_CODE_ADDR              0x00000000                             //	代码地址

#define HC_BUF_SIZE               5000                                   // 缓冲区大小
#define HC_DPG_SIZE               4096								     // 数据包大小

//-------------------------------------------------------------------------------------------------------
typedef enum
{
    HC_FRM_HEAD = 0x7E,												     // 帧头
	HC_FRM_TAIL = 0x7F, 											     // 帧尾
	
	HC_SND_ADDR = 0x20,												     // 发送地址
	HC_SND_DATA = 0x21,  											     // 发送数据

	HC_OK       = 0x00,												     // 正确
	HC_NPC      = 0x01,                                                  // 不支持的指令
	HC_NPRMT    = 0x02,                                   			     // 参数错误
	HC_CODE	    = 0x03,												     // 通讯错误，没有完整接收一帧数据
	HC_CRC      = 0x04,												     // 校验错误，校验码不正确
	HC_EMPTY    = 0x05,												     // 数据溢出
	HC_PACK		= 0x06,													 // 数据包过大
	HC_OPERATE  = 0x07,												     // 操作失败
	HC_LEN      = 0x08,                                                  // 长度错误

	HC_DWN_FNT  = 0x01,												     // 字库
	HC_DWN_COD  = 0x02,												     // 代码

} HC_CMD;

/********************************************************************************************************
* Variable definition                                               
********************************************************************************************************/
typedef struct 
{
    u8  Buf[HC_BUF_SIZE];                                                // 缓冲区
	u16 WriteCount;
	u16 ReadCount;   

	u32 StartAddr;       												 // 起始地址
	u16 PackSize;														 // 数据包大小
	u8  DownMode;														 // 下载模式(1-字库，2-代码)

	u16 TtlPack;														 // 总包数
	u16 CurPack;														 // 当前包
	u32 CodeSize;														 // 代码大小

} HC_PRMT;

extern HC_PRMT HCPrmt;

/********************************************************************************************************
* External Function                                                  
********************************************************************************************************/
#define	HC_SendDat(pStr, len) UARTSendMultiByte(UART0, pStr, len);       // 发送

/********************************************************************************************************
* Internal Function                                                  
********************************************************************************************************/
static void HC_Clear(HC_PRMT *prmt);									 // 清零
static u8   HC_ReadByte(HC_PRMT *prmt);									 //	读取一字节数据
static u16  HC_GetUnReadLen(HC_PRMT *prmt);								 //	获取未读数据长度
static u8   HC_GetFram(HC_PRMT *prmt);                   				 // 获取一帧数据

static void HC_GetStartAddr(HC_PRMT *prmt);								 // 获取起始地址
static void HC_DataToFlash(HC_PRMT *prmt);                      		 // 写数据到Flash

/********************************************************************************************************
* Global Function                                                 
********************************************************************************************************/
extern void HCInit(void);												 // 初始化
extern void HCClearAll(HC_PRMT *prmt);									 // 清除参数
extern void HCRcvData(u8 dat);							                 // 数据接收（串口中断调用）
extern u8   HCTackCtrl(void);								 	         // 任务控制

/*******************************************************************************************************/
#endif

/********************************************************************************************************
* End Of File         
********************************************************************************************************/
